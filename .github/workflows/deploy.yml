name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    environment: Production

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      # Crear archivo .env con las variables necesarias
      - name: Create .env file
        run: |
          echo "VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}" > .env

      - name: Build Frontend
        env:
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
        run: npm run build

      - name: Deploy Worker and Get URL
        id: deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          VITE_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
        run: |
          # Desplegar el worker
          DEPLOY_OUTPUT=$(npm run deploy)
          echo "Deploy output: $DEPLOY_OUTPUT"
          
          # Extraer la URL del worker del output
          WORKER_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://.*workers.dev' | head -n 1)
          echo "Worker URL: $WORKER_URL"
          
          # Guardar la URL como output del paso
          echo "worker_url=$WORKER_URL" >> $GITHUB_OUTPUT
          
          # Configurar el secreto WORKER_URL
          npx wrangler secret put WORKER_URL <<< "$WORKER_URL"

      - name: Update CORS Origins
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          WORKER_URL: ${{ steps.deploy.outputs.worker_url }}
        run: |
          echo "Updating CORS with Worker URL: $WORKER_URL"
          npx wrangler secret put WORKER_URL <<< "$WORKER_URL"

      - name: Verify Deployment
        if: always()
        run: |
          if [ "${{ steps.deploy.outputs.worker_url }}" != "" ]; then
            echo "✅ Deployment successful!"
            echo "Worker URL: ${{ steps.deploy.outputs.worker_url }}"
            echo "CORS origins updated with the Worker URL"
          else
            echo "❌ Deployment failed or Worker URL not found"
            exit 1
          fi